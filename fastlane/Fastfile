gradle_path = './android'

platform :android do
  before_all do
    # Setting the variables to be used throughout
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    # path = '../android/app/version.properties'
    # build_number_file = File.read(path)
    # build_number_file = build_number_file.gsub(/\s+/, "")
    # nom = build_number_file.gsub(/.*=/, '')
    # build_number = nom.to_i
    # build_number = build_number + 1
    # build_number = build_number.to_s
    # ENV["file_build_number"] = build_number
    # ENV["file_version_number"] = ENV["VERSION_NUMBER"]
    # ENV["file_enviroment_id"] = ENV["ENVIRONMENT_VERSION_ID"]
    # app_name = ENV["BUNDLE_NAME"]
    # ENV["app_friendly_name"] = app_name.gsub(' ','-')
    # ENV["tag_name"] = ENV["file_version_number"] + ENV["file_enviroment_id"] + "(" + ENV["file_build_number"] + ")-release-" + ENV["app_friendly_name"] + "-" + ENV["ENVIRONMENT"]
    # ENV["tag_message"] = "Version name: " + ENV["file_version_number"] + ENV["file_enviroment_id"] + "\nVersion code: " + ENV["file_build_number"] + "\nPackage Name / Bundle ID: " + ENV["BUNDLE_ID"] + "\nRepository: " + ENV["REPO"] + "\nEnvironment: " + ENV["ENVIRONMENT"]

  end

  desc "Submit a new Beta Build to HockeyApp Beta"

  #  Used by Bitrise
  lane :beta do
    gradle(
      project_dir: gradle_path,
      task: 'assemble',
      build_type: 'release',
    )

    # This uploads the APK to HockeyApp
    hockey(
      api_token: "115ac7e922a04254a798ce60f23fff3b",
      apk: "android/app/build/outputs/apk/zendokaikarate-1.0(1)-localRelease.apk",
      notes: "Changelog"
    )

    # add_git_tag(tag: ENV["tag_name"], message: ENV["tag_message"])
  end

  # Used when building APK's locally
  lane :betaLocal do
    gradle(
      project_dir: gradle_path,
      task: 'assemble',
      build_type: 'localRelease',
    )

    # This uploads the APK to HockeyApp
    hockey(
      api_token: "115ac7e922a04254a798ce60f23fff3b",
      apk: "android/app/build/outputs/apk/zendokaikarate-1.0(1)-localRelease.apk",
      notes: "Changelog"
    )

  end

  # Live Version
  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   gradle(task: "assembleRelease")
  #   upload_to_play_store
  # end

   # This uploads the APK to Slack
   # desc "Upload the APK to Slack channel"
   # private_lane :upload_to_slack do |options|
   #   file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
   #   file_name = file_path.gsub(/\/.*\//,"")
   #   sh "echo Uploading " + file_name + " to Slack"
   #   sh "curl https://slack.com/api/files.upload -F token=\"xoxp-4217822969-153331550464-311471517696-2ed0262444a7f875eca2f37a4c54d575\" -F channels=\"#testbuildschannel\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
   # end

   # desc "Upload the APK to Dropbox"
   # private_lane :upload_to_dropbox do |options|
   #  dropbox(
   #    file_path: lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH],
   #    dropbox_path: '/' + ENV['BUNDLE_NAME'] + '/apk',
   #    app_key: 'cusy7j5z25qlmrc',
   #    app_secret: '6g8c6wahirp8mll'
   #  )
   # end

  after_all do |lane|
  # This block is called, only if the executed lane was successful

    # This commits all of the changed files that we want commited back to the repo.
    # git_commit(path: [
    #   "./ios/PearlPrototype.xcodeproj/project.pbxproj",
    #   "./ios/PearlPrototype/Info.plist",
    #   "./ios/PearlPrototypeTests/Info.plist",
    #   "./ios/PearlPrototype-tvOS/Info.plist",
    #   "./ios/PearlPrototype-tvOSTests/Info.plist",
    #   "./android/app/version.properties"
    # ], message: "Build prepared and realeased to Testflight and HockeyApp")
    #
    # add_git_tag(tag: ENV["tag_name"], message: ENV["tag_message"])

    #  This pushes the above commit and the tags back to the repo
    # push_to_git_remote(
    #   remote: "origin",         # optional, default: "origin"
    #   local_branch: "WL-1166-ci-bitrise",  # optional, aliased by "branch", default: "master"
    #   remote_branch: "WL-1166-ci-bitrise", # optional, default is set to local_branch
    #   force: true,    # optional, default: false
    #   tags: true     # optional, default: true
    # )

    #  Uploads the APK to Slack
    # upload_to_slack()
    # upload_to_dropbox()
    #
    # slack(
    #   message: ENV['tag_name'] + "\n" + ENV['tag_message'],
    #   success: true,
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end

end
